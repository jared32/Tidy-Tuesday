alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE)
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity - {current_state}")
animate(anim)
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity - {current_frame}")
animate(anim)
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word))
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1)
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1))
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE)
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity")
animate(anim)
#staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=0),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity")
animate(anim)
animate(anim,200,fps=20,width=1200,height=1000)
staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=-1),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity")
staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=0),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity")
animate(anim)
staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE)
staticplot
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2008) %>%
count(year,word)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2010)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2010) %>%
count(year,word)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2012) %>%
count(year,word) %>%
group_by(year)
descriptions_over_time <- d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2012) %>%
mutate(rank=rank(-n))
descriptions_over_time <- d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2012) %>%
count(year,word) %>%
group_by(year)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2012) %>%
count(year,word) %>%
group_by(year)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n))
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year)
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n),
Value_rel = n/n[rank==1],
Value_lbl = paste0(" ", n))
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n),
Value_rel = n/n[rank==1],
Value_lbl = paste0(" ", n)) %>%
group_by(word) %>%
filter(rank<=10) %>%
ungroup()
d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n)) %>%
group_by(word) %>%
filter(rank<=10) %>%
ungroup()
descriptions_over_time <- d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n)) %>%
group_by(word) %>%
filter(rank<=10) %>%
ungroup()
descriptions_over_time
descriptions_over_time <- d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n),
Value_rel = n/n[rank<2]) %>%
group_by(word) %>%
filter(rank<=10) %>%
ungroup()
descriptions_over_time <- d %>%
unnest_tokens(word,txt) %>%
anti_join(stop_words,by="word") %>%
filter(year>=2015) %>%
count(year,word) %>%
group_by(year) %>%
mutate(rank=rank(-n)) %>%
group_by(word) %>%
filter(rank<=10) %>%
ungroup()
staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE)
staticplot <-
descriptions_over_time %>%
ggplot(aes(rank,
group=word,
fill=word,
color=word)) +
geom_tile(aes(y=n,
height=n,
width=.9),
alpha=.8,
color=NA) +
geom_text(aes(y=0,
label=paste(str_to_title(word)," ")),
vjust=.2,
hjust=1) +
geom_text(aes(y=n,
label=n,
hjust=1)) +
coord_flip(clip = "off",expand=FALSE) +
scale_y_continuous() +
scale_x_reverse() +
guides(color = FALSE,
fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line( size=.1, color="grey" ),
panel.grid.minor.x = element_line( size=.1, color="grey" ),
plot.title=element_text(size=25, hjust=0.5, face="bold", colour="grey", vjust=0),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 4, "cm"))
anim <- staticplot +
transition_states(year, transition_length = 4, state_length = 1) +
view_follow(fixed_x = TRUE) +
labs(title = "Netflix Topic Popularity")
animate(anim)
